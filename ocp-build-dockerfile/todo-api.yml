kind: List
metadata: {}
apiVersion: v1
items:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations: {}
    labels:
      app: todo-api
      app.kubernetes.io/component: todo-api
      app.kubernetes.io/instance: todo-api
    name: nodejs
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: {}
      from:
        kind: DockerImage
        name: registry.access.redhat.com/rhscl/nodejs-8-rhel7:latest
      generation: null
      importPolicy: {}
      name: "latest"
      referencePolicy:
        type: ""
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations: {}
    labels:
      app: todo-api
      app.kubernetes.io/component: todo-api
      app.kubernetes.io/instance: todo-api
    name: todo-api
  spec:
    lookupPolicy:
      local: false
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations: {}
    labels:
      app: todo-api
      app.kubernetes.io/component: todo-api
      app.kubernetes.io/instance: todo-api
    name: todo-api
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: todo-api:latest
    postCommit: {}
    resources: {}
    source:
      contextDir: todo-api
      git:
        uri: https://github.com/vjjmiras/todoapp
        ref: dev
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile.s2i
        from:
          kind: ImageStreamTag
          name: nodejs:latest
      type: Docker
    triggers:
    - github:
        secret: rA_G1f9Miu234wNekorv
      type: GitHub
    - generic:
        secret: n0o0WziXv3gMnPf_-S00
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: todo-api
    annotations: {}
    labels:
      app: todo-api
      app.kubernetes.io/component: todo-api
      app.kubernetes.io/instance: todo-api
  spec:
    revisionHistoryLimit: 10
    selector:
      deploymentconfig: todo-api
    strategy:
      type: Rolling
      resources: {}
      activeDeadlineSeconds: 21600
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
    replicas: 1
    selector:
      deploymentconfig: todo-api
    template:
      metadata:
        annotations: {}
        labels:
          deploymentconfig: todo-api
      spec:
        containers:
        - image: ' '
          name: todo-api
          resources: {}
          env:
          - name: TODO_DB_NAME
            value: items
          - name: TODO_DB_USER
            value: user1
          - name: TODO_DB_PASSWORD
            value: mypa55
    test: false
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - todo-api
        from:
          kind: ImageStreamTag
          name: todo-api:latest
- apiVersion: v1
  kind: Service
  metadata:
    name: todo-api
    labels:
      app: todo-api
      app.kubernetes.io/component: todo-api
      app.kubernetes.io/instance: todo-api
  spec:
    type: ClusterIP
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: todo-api
    sessionAffinity: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: todo-api
    annotations: {}
    labels:
      app: todo-api
      app.kubernetes.io/component: todo-api
      app.kubernetes.io/instance: todo-api
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: todo-api
      weight: 100
    wildcardPolicy: None
